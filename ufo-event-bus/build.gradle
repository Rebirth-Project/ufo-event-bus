/*
 * Copyright (C) 2021 Andrea Paternesi Rebirth project
 * Modifications copyright (C) 2021 Matteo Veroni Rebirth project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat

plugins {
    id "java-library"
    id 'maven-publish'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    //id 'net.researchgate.release' version '3.0.2'
}

Date buildTimeAndDate = new Date()
ext {   
    buildDate = new SimpleDateFormat('dd-MM-yyyy').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

repositories {
    mavenCentral()
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
}

compileTestJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
}

javadoc.options.encoding = 'UTF-8'


modularity.mixedJavaRelease 8 // sets "--release 8" for main code, and "--release 9" for "module-info.java"
//    test.moduleOptions.runOnClasspath = true // optional (if you want your tests to still run on classpath)

group = 'it.rebirthproject'
archivesBaseName = 'ufoeventbus'

dependencies {
    api 'org.slf4j:slf4j-api:2.0.2'
    testImplementation 'ch.qos.logback:logback-classic:1.4.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

javadoc {
    failOnError = false
    title = "EventBus ${version} API"
    options.bottom = ''
    options.showFromPrivate()
    options.setWindowTitle("UfoEventBus JavaDoc")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from 'build/docs/javadoc'
}

tasks.withType(Jar) {
    manifest.attributes(
            'Specification-Title': 'UFO Event Bus',
            'Specification-Vendor': 'Rebirth Project',
            'Specification-Version': archiveVersion.get().replace('-SNAPSHOT', ''),
            'Implementation-Title': 'UFO Event Bus',
            'Implementation-Vendor': 'Rebirth Project',
            'Implementation-Version': archiveVersion.get(),
            'Build-Date': project.buildDate,
            'Build-Time': project.buildTime
    )
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set("sources")
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

test {
    //    debug = true
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

//uploadArchives {
//    repositories {
//        mavenDeployer {         
//            pom.project {
//                name 'EventBus'
//                description 'EventBus is a publish/subscribe event bus.'
//            }
//        }
//    }
//}

